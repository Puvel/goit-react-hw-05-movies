{"version":3,"file":"static/js/31.30cb4bff.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/moviesList/MoviesList.module.css?a81a","components/moviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/moviesPage/moviesPage.module.css?4145","components/moviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__46PAX\",\"movieLink\":\"MoviesList_movieLink__ifEBx\",\"movieImage\":\"MoviesList_movieImage__CXJgh\",\"movieTitle\":\"MoviesList_movieTitle__s4hen\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies, query = '' }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesList}>\n      {movies.length > 0 &&\n        movies.map(film => (\n          <li key={film.id}>\n            <Link\n              className={css.movieLink}\n              to={`/movies/${film.id}`}\n              state={{ from: location, search: query }}\n            >\n              {film.poster_path ? (\n                <img\n                  className={css.movieImage}\n                  src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n                  alt={film.title}\n                  width=\"200\"\n                />\n              ) : (\n                <img\n                  className={css.movieImage}\n                  src=\"https://ih1.redbubble.net/image.188518724.7199/flat,128x128,075,t-pad,128x128,f8f8f8.u2.jpg\"\n                  alt={film.title}\n                  width=\"200\"\n                />\n              )}\n              <p className={css.movieTitle}>{film.title}</p>\n            </Link>\n            <p>{film.release_date.substr(0, 4)}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  filter: PropTypes.string,\n  filterInput: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"moviesPage_searchForm__R0BLH\",\"searchInput\":\"moviesPage_searchInput__zO2ab\",\"searchBtn\":\"moviesPage_searchBtn__nCTgN\",\"searchDefault\":\"moviesPage_searchDefault__o9mrG\"};","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchSearch } from 'services/moviesApi';\nimport { MoviesList } from 'components/moviesList/MoviesList';\nimport css from './moviesPage.module.css';\n\nexport const MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n\n  useEffect(() => {\n    if (params && params.query) {\n      setQuery(params.query);\n      fetchSearch(params.query).then(result => setMovies(result.data.results));\n    } else {\n      setQuery('');\n      setMovies([]);\n    }\n  }, [params]);\n\n  const handleChange = e => setQuery(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query) {\n      setSearchParams({ query });\n    }\n  };\n\n  return (\n    <div>\n      <form className={css.searchForm} onSubmit={handleSubmit}>\n        <input\n          type=\"search\"\n          placeholder=\"Search...\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={handleChange}\n          className={css.searchInput}\n        />\n        <button className={css.searchBtn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {movies.length ? (\n        <MoviesList movies={movies} query={query} />\n      ) : (\n        <h2 className={css.searchDefault}>Which movie do you want to find?</h2>\n      )}\n    </div>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '5cdd7594fc899d7c91f091a01f7ddf12';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () =>\n  axios\n    .get(`trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data);\n\nexport const fetchSearch = query =>\n  axios\n    .get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(response => response);\n\nexport const fetchMovieDetails = id =>\n  axios\n    .get(`movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response);\n\nexport const fetchCastInformation = id =>\n  axios\n    .get(`movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response);\n\nexport const fetchReviews = id =>\n  axios\n    .get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    .then(response => response);\n"],"names":["MoviesList","movies","query","location","useLocation","className","css","length","map","film","to","id","state","from","search","poster_path","src","alt","title","width","release_date","substr","MoviesPage","useState","setMovies","setQuery","useSearchParams","searchParams","setSearchParams","params","useMemo","Object","fromEntries","useEffect","fetchSearch","then","result","data","results","onSubmit","e","preventDefault","type","placeholder","autoComplete","value","onChange","target","API_KEY","axios","fetchTrendingMovies","response","fetchMovieDetails","fetchCastInformation","fetchReviews"],"sourceRoot":""}