{"version":3,"file":"static/js/322.64871dd6.chunk.js","mappings":"wNACA,EAA6B,yBAA7B,EAAsE,4BAAtE,EAA+G,yB,SCIlGA,EAAO,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBH,GAASI,MAAK,SAAAC,GAAM,OAAIN,EAAUM,EAAOC,KAAKC,KAA1B,GAC1C,GAAE,CAACP,IAEGF,EAAOU,OAAS,GACrB,eAAIC,UAAWC,EAAf,SACGZ,EAAOa,KAAI,SAAAC,GAAK,OACf,yBACE,gBAAIH,UAAWC,EAAf,WACE,wBACGE,EAAMC,cACL,gBACEJ,UAAWC,EACXI,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,KACXC,MAAM,SAGR,gBACER,UAAWC,EACXI,IAAI,8FACJC,IAAKH,EAAMI,KACXC,MAAM,WAIZ,yBACE,wBAAKL,EAAMI,UAEb,2BACE,uCACA,uBAAIJ,EAAMM,mBAxBPN,EAAMO,GADA,OAgCnB,4CAEH,C,oKChDKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAsB,kBACjCD,EAAAA,EAAAA,IAAA,qCACqCD,IAClChB,MAAK,SAAAmB,GAAQ,OAAIA,EAASjB,IAAb,GAHiB,EAKtBkB,EAAc,SAAAC,GAAK,OAC9BJ,EAAAA,EAAAA,IAAA,+BAE4BD,EAF5B,iCAE4DK,EAF5D,gCAIGrB,MAAK,SAAAmB,GAAQ,OAAIA,CAAJ,GALc,EAOnBG,EAAoB,SAAAP,GAAE,OACjCE,EAAAA,EAAAA,IAAA,gBACgBF,EADhB,oBAC8BC,EAD9B,oBAEGhB,MAAK,SAAAmB,GAAQ,OAAIA,CAAJ,GAHiB,EAKtBpB,EAAuB,SAAAgB,GAAE,OACpCE,EAAAA,EAAAA,IAAA,gBACgBF,EADhB,4BACsCC,IACnChB,MAAK,SAAAmB,GAAQ,OAAIA,CAAJ,GAHoB,EAKzBI,EAAe,SAAAR,GAAE,OAC5BE,EAAAA,EAAAA,IAAA,gBACgBF,EADhB,4BACsCC,EADtC,2BAEGhB,MAAK,SAAAmB,GAAQ,OAAIA,CAAJ,GAHY,C","sources":["webpack://react-homework-template/./src/components/cast/cast.module.css?44e2","components/cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorsList\":\"cast_actorsList__MRg3e\",\"actorInfoList\":\"cast_actorInfoList__4XbYE\",\"actorImage\":\"cast_actorImage__8b5b9\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastInformation } from 'services/moviesApi';\nimport css from './cast.module.css';\n\nexport const Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchCastInformation(movieId).then(result => setActors(result.data.cast));\n  }, [movieId]);\n\n  return actors.length > 0 ? (\n    <ul className={css.actorsList}>\n      {actors.map(actor => (\n        <li key={actor.id}>\n          <ul className={css.actorInfoList}>\n            <li>\n              {actor.profile_path ? (\n                <img\n                  className={css.actorImage}\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                  width=\"200\"\n                />\n              ) : (\n                <img\n                  className={css.actorImage}\n                  src=\"https://ih1.redbubble.net/image.188518724.7199/flat,128x128,075,t-pad,128x128,f8f8f8.u2.jpg\"\n                  alt={actor.name}\n                  width=\"200\"\n                />\n              )}\n            </li>\n            <li>\n              <h4>{actor.name}</h4>\n            </li>\n            <li>\n              <h3>Character</h3>\n              <p>{actor.character}</p>\n            </li>\n          </ul>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <h3>Actors not found</h3>\n  );\n};\n","import axios from 'axios';\nconst API_KEY = '5cdd7594fc899d7c91f091a01f7ddf12';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () =>\n  axios\n    .get(`trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data);\n\nexport const fetchSearch = query =>\n  axios\n    .get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(response => response);\n\nexport const fetchMovieDetails = id =>\n  axios\n    .get(`movie/${id}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response);\n\nexport const fetchCastInformation = id =>\n  axios\n    .get(`movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response);\n\nexport const fetchReviews = id =>\n  axios\n    .get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    .then(response => response);\n"],"names":["Cast","useState","actors","setActors","movieId","useParams","useEffect","fetchCastInformation","then","result","data","cast","length","className","css","map","actor","profile_path","src","alt","name","width","character","id","API_KEY","axios","fetchTrendingMovies","response","fetchSearch","query","fetchMovieDetails","fetchReviews"],"sourceRoot":""}